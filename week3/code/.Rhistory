stochrick <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
{
N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
N[1, ] <- p0 #In row 1 p0 and all the columns of the empty matrix row is year, column is population
#for (pop in 1:length(p0)) { #loop through the populations
for (yr in 2:numyears){ #for each pop, loop through the years
N[yr, p[1:length]] <- N[yr-1, p[1:length]] * exp(r * (1 - N[yr - 1, p[1:length]] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
}
}
return(N)
rm(list = ls())
stochrick <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
{
N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
N[1, ] <- p0 #In row 1 p0 and all the columns of the empty matrix row is year, column is population
#for (pop in 1:length(p0)) { #loop through the populations
for (yr in 2:numyears){ #for each pop, loop through the years
N[yr, (1:length(p0))] <- N[yr-1, (1:length(p0))] * exp(r * (1 - N[yr - 1, (1:length(p0))] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
}
}
return(N)
rm(list = ls())
stochrick <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
{
#run if = generate 1000 random numbers
N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
N[1, ] <- p0 #In row 1 p0 and all the columns of the empty matrix row is year, column is population
for (pop in 1:length(p0)) { #loop through the populations
for (yr in 2:numyears){ #for each pop, loop through the years
N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr - 1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
}
}
return(N)
}
view(stochrick())
rm(list = ls())
stochrick <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
{
N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
N[1, ] <- p0 #In row 1 p0 and all the columns of the empty matrix row is year, column is population
for (yr in 2:numyears){ #for each pop, loop through the years
N[yr, (1:length(p0))] <- N[yr-1, (1:length(p0))] * exp(r * (1 - N[yr - 1, (1:length(p0))] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
}
}
return(N)
rm(list = ls())
stochrick <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
{
N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
N[1, ] <- p0 #In row 1 p0 and all the columns of the empty matrix row is year, column is population
for (yr in 2:numyears){ #for each pop, loop through the years
N[yr, (1:length(p0))] <- N[yr-1, (1:length(p0))] * exp(r * (1 - N[yr - 1, (1:length(p0))] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
}
}
view(stochrick())
# Now write another function called stochrickvect that vectorizes the above to
# the extent possible, with improved performance:
rm(list = ls())
stochrick <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
{
N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
N[1, ] <- p0 #In row 1 p0 and all the columns of the empty matrix row is year, column is population
for (yr in 2:numyears){ #for each pop, loop through the years
N[yr, (1:length(p0))] <- N[yr-1, (1:length(p0))] * exp(r * (1 - N[yr - 1, (1:length(p0))] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
}
}
return(N)
stochrick <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
{
N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
N[1, ] <- p0 #In row 1 p0 and all the columns of the empty matrix row is year, column is population
for (yr in 2:numyears){ #for each pop, loop through the years
N[yr, (1:length(p0))] <- N[yr-1, (1:length(p0))] * exp(r * (1 - N[yr - 1, (1:length(p0))] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
}
return(N)
}
rm(list = ls())
stochrick <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
{
N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
N[1, ] <- p0 #In row 1 p0 and all the columns of the empty matrix row is year, column is population
for (yr in 2:numyears){ #for each pop, loop through the years
N[yr, (1:length(p0))] <- N[yr-1, (1:length(p0))] * exp(r * (1 - N[yr - 1, (1:length(p0))] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
}
return(N)
}
view(stochrick())
# Runs the stochastic Ricker equation with gaussian fluctuations (thermal fluctuations)
rm(list = ls())
stochrick <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
{
#run if = generate 1000 random numbers
N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
N[1, ] <- p0 #In row 1 p0 and all the columns of the empty matrix row is year, column is population
for (pop in 1:length(p0)) { #loop through the populations
for (yr in 2:numyears){ #for each pop, loop through the years
N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr - 1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
}
}
return(N)
}
view(stochrick())
rm(list = ls())
stochrick1 <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
{
N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
N[1, ] <- p0 #In row 1 p0 and all the columns of the empty matrix row is year, column is population
for (yr in 2:numyears){ #for each pop, loop through the years
N[yr, (1:length(p0))] <- N[yr-1, (1:length(p0))] * exp(r * (1 - N[yr - 1, (1:length(p0))] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
}
return(N)
}
view(stochrick1())
approx
#Are temperatures of one year significantly correlated with the next year
#(successive years), across years in a given location?
load("../data/KeyWestAnnualMeanTemperature.Rdata") #Temperature in KeyWest for the 20th Century
head(ats)
plot(ats)
#Save it as a vector
keywest <- vect
is.vector(Year) #is it a vector
Year<-ats[,1]
Year
is.vector(Year) #Check it is a vector
Temp<-ats[,2]
Temp
is.vector(Temp) #Check it is a vector
#approx correltation of year and temp
approx<-cor(Year,Temp,use="everything",method=c("pearson")) #correlation coefficent
approx
summary(a)
#Are temperatures of one year significantly correlated with the next year
#(successive years), across years in a given location?
load("../data/KeyWestAnnualMeanTemperature.Rdata") #Temperature in KeyWest for the 20th Century
head(ats)
plot(ats)
#Save it as a vector
keywest <- vect
is.vector(Year) #is it a vector
Year<-ats[,1]
Year
is.vector(Year) #Check it is a vector
Temp<-ats[,2]
Temp
is.vector(Temp) #Check it is a vector
#approx correltation of year and temp
approx<-cor(Year,Temp,use="everything",method=c("pearson")) #correlation coefficent
approx
#0.5331784 is the approx correlation coefficent
#Shuffle the temp then calculate a correlation coefficent, repeat by 10000
a <- rep(NA,10000) #pre=allocated vector for correlation coefficent
for (i in 1:10000){
a[i] <- cor(Year,sample(Temp,replace=FALSE))
}
print(a)
#histagram of correlation coefficents
hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.5),ylim=c(0,2000))
summary(a)
#histagram of correlation coefficents
jpeg("histogram.jpg", width=459,height=360)
hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.5),ylim=c(0,2000))
summary(a)
dev.off()
#histagram of correlation coefficents
pdf("histogram.pdf", width=459,height=360)
hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.5),ylim=c(0,2000))
summary(a)
dev.off()
#histagram of correlation coefficents
pdf("histogram.pdf", width=459,height=360)
hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.5),ylim=c(0,2000))
summary(a)
dev.off()
#histagram of correlation coefficents
pdf("histogram.pdf", width=459,height=360)
hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.5),ylim=c(0,2000))
summary(a)
graphics.off()
#histagram of correlation coefficents
pdf("histogram.pdf")
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.5),ylim=c(0,2000))
print(graphy)
graphics.off()
#histagram of correlation coefficents
pdf("histogram.pdf")
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.5),ylim=c(0,2000))
print(graph)
graphics.off()
load("../data/KeyWestAnnualMeanTemperature.Rdata") #Temperature in KeyWest for the 20th Century
head(ats)
plot(ats)
pdf(../results/keywest.pdf)
keywest<-plot(ats)
print(keywest)
graphics.off()
pdf("../results/keywest.pdf")
keywest<-plot(ats)
print(keywest)
graphics.off()
load("../data/KeyWestAnnualMeanTemperature.Rdata") #Temperature in KeyWest for the 20th Century
head(ats)
pdf("../results/keywest.pdf")
keywest<-plot(ats)
print(keywest)
graphics.off()
keywest
keywest
keywest<-plot(ats)
print(graph)
graph
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.5),ylim=c(0,2000))
#Are temperatures of one year significantly correlated with the next year
#(successive years), across years in a given location?
load("../data/KeyWestAnnualMeanTemperature.Rdata") #Temperature in KeyWest for the 20th Century
head(ats)
pdf("../results/keywest.pdf")
keywest<-plot(ats)
print(keywest)
graphics.off()
#Save it as a vector
keywest <- vect
is.vector(Year) #is it a vector
Year<-ats[,1]
Year
is.vector(Year) #Check it is a vector
Temp<-ats[,2]
Temp
is.vector(Temp) #Check it is a vector
#approx correltation of year and temp
approx<-cor(Year,Temp,use="everything",method=c("pearson")) #correlation coefficent
approx
#0.5331784 is the approx correlation coefficent
#Shuffle the temp then calculate a correlation coefficent, repeat by 10000
a <- rep(NA,10000) #pre=allocated vector for correlation coefficent
for (i in 1:10000){
a[i] <- cor(Year,sample(Temp,replace=FALSE))
}
print(a)
#histagram of correlation coefficents
pdf("../results/histogram.pdf")
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.5),ylim=c(0,2000))
print(graph)
graphics.off()
#Calculate what fraction of the random correlation coefficients were greater than the observed one (this is your approximate, asymptotic p-value).
length(a[a>approx]) #number of elements greater than approx in R
#None are larger than 0
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.5),ylim=c(0,2000))
load("../data/KeyWestAnnualMeanTemperature.Rdata") #Temperature in KeyWest for the 20th Century
head(ats)
keywest<-plot(ats)
keywest<-abline(lm(ats$Temp~ats$Year),col="blue")
#approx correltation of year and temp
approx<-cor(Year,Temp,use="everything",method=c("pearson")) #correlation coefficent
approx
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.5),ylim=c(0,2000))
print(graph)
#Shuffle the temp then calculate a correlation coefficent, repeat by 10000
a <- rep(NA,10000) #pre=allocated vector for correlation coefficent
for (i in 1:10000){
a[i] <- cor(Year,sample(Temp,replace=FALSE))
}
print(a)
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.5),ylim=c(0,2000))
print(graph)
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.5),ylim=c(0,2000))
load("../data/KeyWestAnnualMeanTemperature.Rdata") #Temperature in KeyWest for the 20th Century
head(ats)
pdf("../results/keywest.pdf")
keywest<-plot(ats)
keywest<-abline(lm(ats$Temp~ats$Year),col="blue")
print(keywest)
graphics.off()
#Save it as a vector
keywest <- vect
is.vector(Year) #is it a vector
Year<-ats[,1]
Year
is.vector(Year) #Check it is a vector
Temp<-ats[,2]
Temp
is.vector(Temp) #Check it is a vector
#approx correltation of year and temp
approx<-cor(Year,Temp,use="everything",method=c("pearson")) #correlation coefficent
approx
#0.5331784 is the approx correlation coefficent
#Shuffle the temp then calculate a correlation coefficent, repeat by 10000
a <- rep(NA,10000) #pre=allocated vector for correlation coefficent
for (i in 1:10000){
a[i] <- cor(Year,sample(Temp,replace=FALSE))
}
print(a)
#histagram of correlation coefficents
pdf("../results/histogram.pdf")
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.5),ylim=c(0,2000))
print(graph)
graphics.off()
#Calculate what fraction of the random correlation coefficients were greater than the observed one (this is your approximate, asymptotic p-value).
length(a[a>approx]) #number of elements greater than approx in R
#None are larger than 0
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.5),ylim=c(0,2000))
print(graph)
abline(v = approx, col="blue", lwd=3, lty=2)
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.9),ylim=c(0,2000))
abline(v = approx, col="blue", lwd=3, lty=2)
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
abline(v = approx, col="blue", lwd=3, lty=2)
legend(0.8,2000, legend="Observed Correlation coefficient", col="blue",box.lty=0)
print(graph)
abline(v = approx, col="blue", lwd=3, lty=2)
legend(0.8,2000, legend="Observed Correlation coefficient", col="blue",box.lty=0)
legend(0.8,1500, legend="Observed Correlation coefficient", col="blue",box.lty=0)
legend(0.4,1500, legend="Observed Correlation coefficient", col="blue",box.lty=0)
legend("right", legend="Observed Correlation coefficient", col="blue",box.lty=0,cex=0.5)
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
abline(v = approx, col="blue", lwd=3, lty=2)
legend("right", legend="Observed Correlation coefficient", col="blue",box.lty=0,cex=0.5)
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
abline(v = approx, col="blue", lwd=3, lty=2)
legend("right", legend="Observed Correlation coefficient", col="blue",box.lty=0,cex=0.5,lwd=3, lty=2))
legend("right", legend="Observed Correlation coefficient", col="blue",box.lty=0,cex=0.5,lwd=3, lty=2)
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
abline(v = approx, col="blue", lwd=3, lty=2)
legend("bottom", legend="Observed Correlation coefficient", col="blue",box.lty=0,cex=0.5,lwd=3, lty=2)
legend("bottom", inset = c(0, -0.5), legend="Observed Correlation coefficient", col="blue",box.lty=0,cex=0.5,lwd=3, lty=2)
legend("topleft",legend="Observed Correlation coefficient", col="blue",box.lty=0,cex=0.5,lwd=3, lty=2)
legend("bottom",legend="Observed Correlation coefficient", col="blue",box.lty=0,cex=0.5,lwd=3, lty=2, xpd = TRUE)
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
abline(v = approx, col="blue", lwd=3, lty=2)
legend("bottom",legend="Observed Correlation coefficient", col="blue",box.lty=0,cex=0.5,lwd=3, lty=2, xpd = TRUE)
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
abline(v = approx, col="blue", lwd=3, lty=2)
legend("top",legend="Observed Correlation coefficient", col="blue",box.lty=0,cex=0.5,lwd=3, lty=2, xpd = TRUE)
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
abline(v = approx, col="blue", lwd=3, lty=2)
legend("top",legend="Observed Correlation coefficient", col="blue",box.lty=0,cex=0.4,lwd=3, lty=2, xpd = TRUE)
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
abline(v = approx, col="blue", lwd=3, lty=2)
legend("topleft",legend="Observed Correlation coefficient", col="blue",box.lty=0,cex=0.4,lwd=3, lty=2, xpd = TRUE)
legend("topright",legend="Observed correlation coefficient", col="blue",box.lty=0,cex=0.4,lwd=3, lty=2, xpd = TRUE)
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
abline(v = approx, col="blue", lwd=3, lty=2)
legend("topright",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2)
View(MyData)
source ("Florida.R")
source "Florida.R"
source ("Florida.R")
source("Florida.R")
#Save it as a vector
keywest <- vect
#Save it as a vector
is.vector(Year) #is it a vector
Year<-ats[,1]
Year
is.vector(Year) #Check it is a vector
Temp
is.vector(Temp) #Check it is a vector
load("../data/KeyWestAnnualMeanTemperature.Rdata") #Temperature in KeyWest for the 20th Century
is.vector(Year) #is it a vector
source("Florida.R")
print(graph)
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
abline(v = approx, col="blue", lwd=3, lty=2)
legend("topright",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2)
print(graph)
#histagram of correlation coefficents
pdf("../results/histogram.pdf")
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
abline(v = approx, col="blue", lwd=3, lty=2)
legend("topright",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2)
print(graph)
graphics.off()
par(mar = c(6, 4.1, 4.1, 2.1))
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
abline(v = approx, col="blue", lwd=3, lty=2)
legend("topright",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2,inset = c(0, -0.35),xpd = TRUE)
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
abline(v = approx, col="blue", lwd=3, lty=2)
legend("bottom",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2,inset = c(0, -0.35),xpd = TRUE)
print(graph)
legend("bottom",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2,inset = c(0, -0.60),xpd = TRUE)
legend("bottom",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2,inset = c(0, -0.50),xpd = TRUE)
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
abline(v = approx, col="blue", lwd=3, lty=2)
legend("bottom",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2,inset = c(0, -0.55),xpd = TRUE)
print(graph)
graphics.off()
source("Florida.R")
source("Florida.R")
par(mar = c(6, 4.1, 4.1, 2.1))
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
abline(v = approx, col="blue", lwd=3, lty=2)
legend("bottom",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2,inset = c(0, -0.55),xpd = TRUE)
on.exit(par(graph))
print(graph)
graphics.off()
source("Florida.R")
par(mar = c(7, 4.1, 4.1, 2.1))
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
abline(v = approx, col="blue", lwd=3, lty=2)
legend("bottom",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2,inset = c(0, -0.55),xpd = TRUE)
#histagram of correlation coefficents
pdf("../results/histogram.pdf")
par(mar = c(6, 4.1, 4.1, 2.1))
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
graph<-abline(v = approx, col="blue", lwd=3, lty=2)
graph<-legend("bottom",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2,inset = c(0, -0.55),xpd = TRUE)
print(graph)
graphics.off()
par(mar = c(6, 4.1, 4.1, 2.1))
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
graph<-abline(v = approx, col="blue", lwd=3, lty=2)
graph<-legend("bottom",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2,inset = c(0, -0.55),xpd = TRUE)
print(graph)
#histagram of correlation coefficents
pdf("../results/histogram.pdf")
par(mar = c(6, 4.1, 4.1, 2.1))
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
graph<-abline(v = approx, col="blue", lwd=3, lty=2)
graph<-legend("bottom",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2,inset = c(0, -0.55),xpd = TRUE)
print(graph)
graphics.off()
#histagram of correlation coefficents
pdf("../results/histogram.pdf",8,8)
par(mar = c(6, 4.1, 4.1, 2.1))
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
graph<-abline(v = approx, col="blue", lwd=3, lty=2)
graph<-legend("bottom",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2,inset = c(0, -0.55),xpd = TRUE)
print(graph)
graphics.off()
#histagram of correlation coefficents
pdf("../results/histogram.pdf",11,8)
par(mar = c(6, 4.1, 4.1, 2.1))
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
graph<-abline(v = approx, col="blue", lwd=3, lty=2)
graph<-legend("bottom",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2,inset = c(0, -0.55),xpd = TRUE)
print(graph)
graphics.off()
#histagram of correlation coefficents
pdf("../results/histogram.pdf",8,11)
par(mar = c(6, 4.1, 4.1, 2.1))
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
graph<-abline(v = approx, col="blue", lwd=3, lty=2)
graph<-legend("bottom",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2,inset = c(0, -0.55),xpd = TRUE)
print(graph)
graphics.off()
#histagram of correlation coefficents
pdf("../results/histogram.pdf",width=8,height=11)
par(mar = c(6, 4.1, 4.1, 2.1))
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
graph<-abline(v = approx, col="blue", lwd=3, lty=2)
graph<-legend("bottom",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2,inset = c(0, -0.55),xpd = TRUE)
paste(graph)
dev.off()
#histagram of correlation coefficents
pdf("../results/histogram.pdf",width=8,height=11)
par(mar = c(6, 4.1, 4.1, 2.1))
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
graph<-abline(v = approx, col="blue", lwd=3, lty=2)
graph<-legend("bottom",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2,inset = c(0, -0.55),xpd = TRUE)
print(graph)
dev.off()
#histagram of correlation coefficents
pdf("../results/histogram.pdf",width=8,height=8)
par(mar = c(6, 4.1, 4.1, 2.1))
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
graph<-abline(v = approx, col="blue", lwd=3, lty=2)
graph<-legend("bottom",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2,inset = c(0, -0.55),xpd = TRUE)
print(graph)
dev.off()
#histagram of correlation coefficents
pdf("../results/histogram.pdf",width=8,height=8)
par(mar = c(6, 4.1, 4.1, 2.1))
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
graph<-abline(v = approx, col="blue", lwd=3, lty=2)
graph<-legend("top",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2,inset = c(0, -0.55),xpd = TRUE)
print(graph)
dev.off()
View(graph)
#histagram of correlation coefficents
pdf("../results/histogram.pdf")
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
abline(v = approx, col="blue", lwd=3, lty=2)
legend("top",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2,inset = c(0, -0.55),xpd = TRUE)
print(graph)
dev.off()
#histagram of correlation coefficents
pdf("../results/histogram.pdf")
graph<-hist(a, xlab="Correlation Coefficent", ylab="Frequency", main="Histagram of Matrix", xlim=c(-0.5,0.7),ylim=c(0,2000))
abline(v = approx, col="blue", lwd=3, lty=2)
legend("top",legend="Observed correlation coefficient", col="blue",cex=0.4,lwd=3, lty=2)
print(graph)
graph
graphics.off()
source("Florida.R")
source("Florida.R")
source("Florida.R")
require(tidyverse)
require(ggplot2)
library(plyr)
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
head(MyDF)
str(MyDF)
a <- ggplot(MyDF,aes(x=Prey.mass, y=Predator.mass, colour=Predator.lifestage))
a <- a + geom_point(shape = I(3)) + facet_grid( Type.of.feeding.interaction~.) + scale_y_continuous(trans = 'log10') + theme_bw() + theme(panel.grid.minor = element_blank()) + geom_smooth(method = "lm",size=0.5,fullrange=TRUE) + scale_x_continuous(trans = 'log10')
a <- a + xlab("Prey Mass in grams") + ylab("Predator mass in grams") + theme(legend.position="bottom", legend.title=element_text(face="bold"), legend.box="horizontal")
a <- a + guides(colour = guide_legend(nrow = 1)) + theme(plot.margin = unit(c(1,3,1,3), "cm"))
a
#piscivorous
count(piscivorous$lifestage) # 5 lines
fig2<-lm(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="piscivorous"])~log10(MyDF$Prey.mass[MyDF$Type.of.feeding.interaction=="piscivorous"])*MyDF$Predator.lifestage[MyDF$Type.of.feeding.interaction=="piscivorous"])
summary(fig2)
