par(mfcol=c(2,1))#Initialize multi-paneled plot
par(mfg=c(1,1))#specify which subplot to use first
hist(log10(MyDF$Predator.mass), xlab="log10(Predator Mass (g))", ylab="Count", col="lightblue", border="pink", main='Predator')
par(mfg=c(2,1))#second subplot
hist(log10(MyDF$Prey.mass),xlab="log10(Prey Mass (g))", ylab="Count", col="lightgreen", border="pink", main='prey')
#Overlaying plots
hist(log10(MyDF$Predator.mass), xlab="log10(Body Mass (g))", ylab="Count", col="rgb(1,0,0,0.5)",main="Predator-prey size Overlap")
# rgb, forth value is transparency
hist(log10(MyDF$Prey.mass),col=rgb(0,0,1,0.5), add=T) #plot prey
legend('topleft',c('Predators','Prey'),fill=c(rgb(1,0,0,0.5), rgb(0,0,1,0.5))) #Adding legends, Legend colours
dev.off() #reset par
#Overlaying plots
hist(log10(MyDF$Predator.mass), xlab="log10(Body Mass (g))", ylab="Count", col="rgb(1,0,0,0.5)",main="Predator-prey size Overlap")
# rgb, forth value is transparency
hist(log10(MyDF$Prey.mass),col=rgb(0,0,1,0.5), add=T) #plot prey
legend('topleft',c('Predators','Prey'),fill=c(rgb(1,0,0,0.5), rgb(0,0,1,0.5))) #Adding legends, Legend colours
#Overlaying plots
hist(log10(MyDF$Predator.mass), xlab="log10(Body Mass (g))", ylab="Count", col=rgb(1,0,0,0.5),main="Predator-prey size Overlap")
# rgb, forth value is transparency
hist(log10(MyDF$Prey.mass),col=rgb(0,0,1,0.5), add=T) #plot prey
legend('topleft',c('Predators','Prey'),fill=c(rgb(1,0,0,0.5), rgb(0,0,1,0.5))) #Adding legends, Legend colours
#Overlaying plots
hist(log10(MyDF$Predator.mass), xlab="log10(Body Mass (g))", ylab="Count", col=rgb(1,0,0,0.5),main="Predator-prey size Overlap",breaks=20 )
# rgb, forth value is transparency
hist(log10(MyDF$Prey.mass),col=rgb(0,0,1,0.5), add=T,breaks=20) #plot prey
legend('topleft',c('Predators','Prey'),fill=c(rgb(1,0,0,0.5), rgb(0,0,1,0.5))) #Adding legends, Legend colours
#Boxplot (good for vidual summary of distribution)
boxplot(log10(MyDF$Predator.mass),xlab="Location", ylab="log10(Predator Mass (g)", main = "Predator Mass")
#How many locations are the data from?
boxplot(log(MyDF$Predator.mass)~MyDF$Location, xlab="Location", ylab="Predator Mass", main="Predator mass by location")
boxplot(log(MyDF$Predator.mass)~MyDF$Type.of.feeding.interaction, xlab="Location", ylab="Predator Mass", main = "Predator mass by feeding interaction type")
#Combining plot types
par(fig=c(0,0.8,0,0.8)) #specify figure size as proportion
plot(log(MyDF$Predator.mass), log(MyDF$Prey.mass), xlab="Predator Mass (g)", ylab="Prey Mass (g)")
par(fig=c(0,0.8,0.4,1), new=TRUE)
boxplot(log(MyDF$Predator.mass), horizontal=TRUE, axes=FALSE)
par(fig=c(0.55,1,0,0.8),new=TRUE)
boxplot(log(MyDF$Prey.mass), axes=FALSE)
mtext("Fancy Predator-prey scatterplot",side=3,outer=TRUE,line=-3)
#Saving graphics in the vector graphic format like pdf
pdf("../results/Pred_Prey_Overlay.pdf",11.7,8.3) #open blank pdf page, numbers are page dimentsions in inches
hist(log(MyDF$Predator.mass), xlab="Body Mass (g)", ylab="Count", col=rgb(1,0,0,0.5), main="Predator-Prey Size Overlap")
hist(log(MyDF$Prey.mass), col=rgb(0,0,1,0.5), add=T) #plot prey weight, add=T, add to same plot
legend('topleft',c('Predators','Prey'),fill=c(rgb(1,0,0,0.5), rgb(0,0,1,0.5))) #Adding legends, Legend colours
graphics.off()
require(ggplot2)
qplot(Prey.mass,Predator.mass, data=MyDF)
qplot(log(Prey.mass), log(Predator.mass), data=MyDF)
qplot(log(Prey.mass), log(Predator.mass), data=MyDF,colour=Type.of.feeding.interaction)
qplot(log(Prey.mass), log(Predator.mass), data=MyDF,colour=Type.of.feeding.interaction, asp=1)
qplot(log(Prey.mass), log(Predator.mass), data=MyDF,shape=Type.of.feeding.interaction, asp=1) #asp=changing the figure aspect ratio
qplot(log(Prey.mass), log(Predator.mass), data=MyDF, colour ="red") #asp=changing the figure aspect ratio
qplot(log(Prey.mass), log(Predator.mass), data=MyDF, colour =I("red")
qplot(log(Prey.mass), log(Predator.mass), data=MyDF, colour =I("red"))
qplot(log(Prey.mass), log(Predator.mass), data=MyDF, colour=I("red"))
#setting transparency to see overlapping points
qplot(log(Prey.mass), log(Predator.mass), data=MyDF,shape=Type.of.feeding.interaction, alpha=I(0.5)) #shape, changing the shape of points based on data
#setting transparency to see overlapping points
qplot(log(Prey.mass), log(Predator.mass), data=MyDF,shape=Type.of.feeding.interaction, alpha=0.5) #make points semi transparent using alpha so overlaps can be seen
#setting transparency to see overlapping points
qplot(log(Prey.mass), log(Predator.mass), data=MyDF,shape=Type.of.feeding.interaction, alpha=I(0.5) #make points semi transparent using alpha so overlaps can be seen
#setting transparency to see overlapping points
qplot(log(Prey.mass), log(Predator.mass), data=MyDF,shape=Type.of.feeding.interaction, alpha=I(0.5)) #make points semi transparent using alpha so overlaps can be seen
#setting transparency to see overlapping points
qplot(log(Prey.mass), log(Predator.mass), data=MyDF,shape=Type.of.feeding.interaction, alpha=I(0.5)) #make points semi transparent using alpha so overlaps can be seen
#setting transparency to see overlapping points
qplot(log(Prey.mass), log(Predator.mass), data=MyDF,colour=Type.of.feeding.interaction, alpha=I(0.5)) #make points semi transparent using alpha so overlaps can be seen
#setting transparency to see overlapping points
qplot(log(Prey.mass), log(Predator.mass), data=MyDF,colour=Type.of.feeding.interaction, alpha=0.5) #make points semi transparent using alpha so overlaps can be seen
#setting transparency to see overlapping points
qplot(log(Prey.mass), log(Predator.mass), data=MyDF,colour=Type.of.feeding.interaction, alpha=I(0.5) #make points semi transparent using alpha so overlaps can be seen
#setting transparency to see overlapping points
qplot(log(Prey.mass), log(Predator.mass), data=MyDF,colour=Type.of.feeding.interaction, alpha=I(0.5)) #make points semi transparent using alpha so overlaps can be seen
#setting transparency to see overlapping points
qplot(log(Prey.mass), log(Predator.mass), data=MyDF,colour=Type.of.feeding.interaction, alpha=I(0.5)) #make points semi transparent using alpha so overlaps can be seen
#Adding smoothers and regression line
qplot(log(Prey.mass), log(Predator.mass), data=MyDF, geom=c("point","smooth")
#Adding smoothers and regression line
qplot(log(Prey.mass), log(Predator.mass), data=MyDF, geom=c("point","smooth"))
#Adding smoothers and regression line
qplot(log(Prey.mass), log(Predator.mass), data=MyDF, geom=c("point","smooth"))
qplot(log(Prey.mass), log(Predator.mass), data = MyDF, geom = c("point", "smooth")) + geom_smooth(method = "lm")
############# Load the dataset ###############
# header = false because the raw data don't have real headers
MyData <- as.matrix(read.csv("../data/PoundHillData.csv", header = FALSE))
############# Inspect the dataset ###############
head(MyData)
############# Transpose ###############
# To get those species into columns and treatments into rows
MyData <- t(MyData) #Flip the columns and rows
head(MyData)
############# Convert from wide to long format  ###############
require(tidyverse) # load the reshape2 package
############# Transpose ###############
# To get those species into columns and treatments into rows
tdata = acast(MyData)
tidyverse
tidyverse_packages(include_self = TRUE)
############# Transpose ###############
# To get those species into columns and treatments into rows
%>% MyData()
############# Transpose ###############
# To get those species into columns and treatments into rows
purr::MyData()
############# Transpose ###############
# To get those species into columns and treatments into rows
purrr::MyData()
MyData <- t(MyData) #Flip the columns and rows
head(MyData)
############# Transpose ###############
# To get those species into columns and treatments into rows
tidyr::spread(MyData)
MyData <- t(MyData) #Flip the columns and rows
head(MyData)
############# Load the dataset ###############
# header = false because the raw data don't have real headers
MyData <- as.matrix(read.csv("../data/PoundHillData.csv", header = FALSE))
############# Inspect the dataset ###############
head(MyData)
dplyr::mutate(MyData=replace(MyData, MyData == "", 0))
dplyr::glimpse(MyData)
dplyr::summarise(MyData)
tibble::as_tibble(MyData)
dplyr::glimpse(MyData)
str(MyData) #Whats the string of the data
dim(MyData) #dimentions of the data
tidyr::replace_na(MyData,0)
############# Load the dataset ###############
# header = false because the raw data don't have real headers
MyData <- as.matrix(read.csv("../data/PoundHillData.csv", header = FALSE))
tidyr::fill(0)
tibble::as_tibble(MyData)
tidyr::fill(0)
tidyr::fill()
dplyr::replace(MyData, .=="",0)
dplyr::replace(.=="",0)
dplyr::mutate(MyData, .=="",0)
TempData <- as.data.frame(MyData[-1,],stringsAsFactors = F) #stringsAsFactors = F is important!, character should not be coverted to a factor = False
head(MyData)
dplyr::mutate(MyData, .=="",0)
tibble::as_tibble(MyData)
dplyr::mutate(MyData, .=="",0)
TempData <- as.data.frame(MyData[-1,],stringsAsFactors = F) #stringsAsFactors = F is important!, character should not be coverted to a factor = False
dplyr::mutate(TempData, .=="",0)
dplyr::mutate(TempData, =="",0)
dplyr::mutate(TempData, == "",0)
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
dim(MyDF)
MyDF$Type.of.feeding.interaction <- as.factor(MyDF$Type.of.feeding.interaction)
MyDF$Location <- as.factor(MyDF$Location)
str(MyDF)
head(MyDF)
View(MyDF)
######### 3 Figures #########
#Subplots of Distribution of Predator Mass by Feeding Interation type
names(MyDF$Type.of.feeding.interaction)
######### 3 Figures #########
#Subplots of Distribution of Predator Mass by Feeding Interation type
plot(MyDF$Type.of.feeding.interaction)
par(mfrow=c(3,1)) #initialize multi-paneled plot # specify which sub-plot to use first
hist(MyDF$Type.of.feeding.interaction$insectivorous,log10(Predator.mass),
xlab = "Type of feeding interactions", ylab = "Predator mass (g)",
main = 'Predator') # Add title
par(mfrow=c(3,1)) #initialize multi-paneled plot # specify which sub-plot to use first
hist(MyDF$Type.of.feeding.interaction[insectivorous],log10(Predator.mass),
xlab = "Type of feeding interactions", ylab = "Predator mass (g)",
main = 'Predator') # Add title
hist(MyDF$Type.of.feeding.interaction[insectivorous],log10(Predator.mass),
xlab = "Type of feeding interactions", ylab = "Predator mass (g)",
main = 'Predator') # Add title
hist(MyDF$Type.of.feeding.interaction=="insectivorous",log10(Predator.mass),
xlab = "Type of feeding interactions", ylab = "Predator mass (g)",
main = 'Predator') # Add title
qplot(MyDF$Type.of.feeding.interaction=="insectivorous",log10(Predator.mass),
xlab = "Type of feeding interactions", ylab = "Predator mass (g)",
main = 'Predator') # Add title
qplot(MyDF$Type.of.feeding.interaction=="insectivorous",log10(MyDF$Predator.mass),
xlab = "Type of feeding interactions", ylab = "Predator mass (g)",
main = 'Predator') # Add title
qplot(MyDF$Type.of.feeding.interaction=="insectivorous",log(MyDF$Predator.mass),
xlab = "Type of feeding interactions", ylab = "Predator mass (g)",
main = 'Predator') # Add title
plot(MyDF$Type.of.feeding.interaction=="insectivorous",log(MyDF$Predator.mass),
xlab = "Type of feeding interactions", ylab = "Predator mass (g)",
main = 'Predator') # Add title
barplot(MyDF$Type.of.feeding.interaction=="insectivorous",log(MyDF$Predator.mass),
xlab = "Type of feeding interactions", ylab = "Predator mass (g)",
main = 'Predator') # Add title
######### 3 Figures #########
#Subplots of Distribution of Predator Mass by Feeding Interation type
plot(MyDF$Type.of.feeding.interaction)
plot(log(MyDF$Predator.Mass),
xlab = "log Predator Mass (g)", ylab = "Insectivorous",
main = ) # Add title
hist(log(MyDF$Predator.Mass),
xlab = "log Predator Mass (g)", ylab = "Insectivorous",
main = ) # Add title
hist(log10(MyDF$Predator.Mass),
xlab = "log10 (Predator Mass (g))", ylab = "Insectivorous",
main = ) # Add title
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="insectivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Insectivorous")
plot(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="insectivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Insectivorous")
par(mfrow=c(1,1))
plot(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="insectivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Insectivorous")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="insectivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Insectivorous")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="insectivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Insectivorous Feeding Interaction", main="Insectivorous Feeding Interaction in Predators")
######### 3 Figures #########
#Subplots of Distribution of Predator Mass by Feeding Interation type
plot(MyDF$Type.of.feeding.interaction)
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="insectivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Insectivorous Feeding Interaction")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="piscivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Piscivorous Feeding Interaction")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="planktivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Planktivorous Feeding Interaction")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="predacious"]), xlab = "log10 (Predator Mass (g))", ylab = "Predacious Feeding Interaction")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="predacious/piscivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Predacious/Piscivorous Feeding Interaction")
par(mfrow=c(3,2)) #initialize multi-paneled plot # specify which sub-plot to use first
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="insectivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Insectivorous Feeding Interaction", main ="")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="piscivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Piscivorous Feeding Interaction" , main ="")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="planktivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Planktivorous Feeding Interaction" , main ="")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="predacious"]), xlab = "log10 (Predator Mass (g))", ylab = "Predacious Feeding Interaction" , main ="")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="predacious/piscivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Predacious/Piscivorous Feeding Interaction" , main ="")
text(line2user(line=mean(par('mar')[c(2, 4)]), side=2),
line2user(line=2, side=3), 'Predator Mass and Feeding Interactions', xpd=NA, cex=2, font=2)
par(mfrow=c(3,2)) #initialize multi-paneled plot # specify which sub-plot to use first
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="insectivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Insectivorous", main ="")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="piscivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Piscivorous" , main ="")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="planktivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Planktivorous" , main ="")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="predacious"]), xlab = "log10 (Predator Mass (g))", ylab = "Predacious" , main ="")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="predacious/piscivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Predacious/Piscivorous" , main ="")
text(line2user(line=mean(par('mar')[c(2, 4)]), side=2),
line2user(line=2, side=3), 'Predator Mass and Feeding Interactions', xpd=NA, cex=2, font=2)
pdf("../results/Pred_Subplots.pdf", # Open blank pdf page using a relative path
11.7, 8.3) # These numbers are page dimensions in inches
par(mfrow=c(3,2)) #initialize multi-paneled plot # specify which sub-plot to use first
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="insectivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Insectivorous", main ="")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="piscivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Piscivorous" , main ="")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="planktivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Planktivorous" , main ="")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="predacious"]), xlab = "log10 (Predator Mass (g))", ylab = "Predacious" , main ="")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="predacious/piscivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Predacious/Piscivorous" , main ="")
Title(main="Types of feeding interaction and Predator mass (g)" )
graphics.off(); #you can also use dev.off()
pdf("../results/Pred_Subplots.pdf", # Open blank pdf page using a relative path
11.7, 8.3) # These numbers are page dimensions in inches
par(mfrow=c(3,2)) #initialize multi-paneled plot # specify which sub-plot to use first
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="insectivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Insectivorous", main ="")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="piscivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Piscivorous" , main ="")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="planktivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Planktivorous" , main ="")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="predacious"]), xlab = "log10 (Predator Mass (g))", ylab = "Predacious" , main ="")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="predacious/piscivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Predacious/Piscivorous" , main ="")
title(main="Types of feeding interaction and Predator mass (g)" )
graphics.off(); #you can also use dev.off()
pdf("../results/Pred_Subplots.pdf", # Open blank pdf page using a relative path
11.7, 8.3) # These numbers are page dimensions in inches
par(mfrow=c(3,2)) #initialize multi-paneled plot # specify which sub-plot to use first
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="insectivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Insectivorous", main ="")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="piscivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Piscivorous" , main ="")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="planktivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Planktivorous" , main ="")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="predacious"]), xlab = "log10 (Predator Mass (g))", ylab = "Predacious" , main ="")
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="predacious/piscivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Predacious/Piscivorous" , main ="")
mtext("Types of feeding interaction and Predator mass (g)",side = 3,line = - 2,outer = TRUE)
graphics.off(); #you can also use dev.off()
hist(log10(MyDF$Prey.mass[MyDF$Type.of.feeding.interaction=="insectivorous"]), xlab = "log10 (Prey Mass (g))", ylab = "Insectivorous", main ="")
hist(log10(MyDF$Prey.mass[MyDF$Type.of.feeding.interaction=="piscivorous"]), xlab = "log10 (Prey Mass (g))", ylab = "Piscivorous" , main ="")
hist(log10(MyDF$Prey.mass[MyDF$Type.of.feeding.interaction=="planktivorous"]), xlab = "log10 (Prey Mass (g))", ylab = "Planktivorous" , main ="")
hist(log10(MyDF$Prey.mass[MyDF$Type.of.feeding.interaction=="predacious"]), xlab = "log10 (Prey Mass (g))", ylab = "Predacious" , main ="")
#Subplots of Distribution of Prey Mass by Feeding Interation type
pdf("../results/Prey_Subplots.pdf", # Open blank pdf page using a relative path
11.7, 8.3) # These numbers are page dimensions in inches
par(mfrow=c(3,2)) #initialize multi-paneled plot # specify which sub-plot to use first
hist(log10(MyDF$Prey.mass[MyDF$Type.of.feeding.interaction=="insectivorous"]), xlab = "log10 (Prey Mass (g))", ylab = "Insectivorous", main ="")
hist(log10(MyDF$Prey.mass[MyDF$Type.of.feeding.interaction=="piscivorous"]), xlab = "log10 (Prey Mass (g))", ylab = "Piscivorous" , main ="")
hist(log10(MyDF$Prey.mass[MyDF$Type.of.feeding.interaction=="planktivorous"]), xlab = "log10 (Prey Mass (g))", ylab = "Planktivorous" , main ="")
hist(log10(MyDF$Prey.mass[MyDF$Type.of.feeding.interaction=="predacious"]), xlab = "log10 (Prey Mass (g))", ylab = "Predacious" , main ="")
hist(log10(MyDF$Prey.mass[MyDF$Type.of.feeding.interaction=="predacious/piscivorous"]), xlab = "log10 (Prey Mass (g))", ylab = "Predacious/Piscivorous" , main ="")
mtext("Types of feeding interaction and Prey mass (g)",side = 3,line = - 2,outer = TRUE)
graphics.off(); #you can also use dev.off()
#Finding Size Ratios
Ratio = MyDF$Prey.mass / MyDF$Predator.mass
New <- data.frame(Ratio, MyDF$Type.of.feeding.interaction)
View(New)
#Subplots of size ratio of prey mass over predator mass by feeding interaction type
Ratio1 = MyDF$Prey.mass[MyDF$Type.of.feeding.interaction=="insectivorous"] / MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="insectivorous"]
hist(log10(Ratio1), xlab = "log10 (Prey Mass (g))", ylab = "Insectivorous", main ="")
hist(Ratio1), xlab = "log10 (Prey Mass (g))", ylab = "Insectivorous", main ="")
hist(Ratio1) xlab = "log10 (Prey Mass (g))", ylab = "Insectivorous", main ="")
hist(Ratio1, xlab = "log10 (Prey Mass (g))", ylab = "Insectivorous", main ="")
hist(log10(Ratio1), xlab = "log10 (Prey Mass (g))", ylab = "Insectivorous", main ="")
########### Calculations ########
Ratio1 = MyDF$Prey.mass[MyDF$Type.of.feeding.interaction=="insectivorous"] / MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="insectivorous"]
Ratio2 = MyDF$Prey.mass[MyDF$Type.of.feeding.interaction=="piscivorous"] / MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="piscivorous"]
Ratio3 = MyDF$Prey.mass[MyDF$Type.of.feeding.interaction=="planktivorous"] / MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="planktivorous"]
Ratio4 = MyDF$Prey.mass[MyDF$Type.of.feeding.interaction=="predacious"] / MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="predacious"]
Ratio5 = MyDF$Prey.mass[MyDF$Type.of.feeding.interaction=="predacious/piscivorous"] / MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="predacious/piscivorous"]
par(mfrow=c(3,2))
hist(log10(Ratio1), xlab = "log10 (Size ratio of prey mass over predator mass (g))", ylab = "Insectivorous", main ="")
hist(log10(Ratio2), xlab = "log10 (Size ratio of prey mass over predator mass (g))", ylab = "piscivorous", main ="")
hist(log10(Ratio3), xlab = "log10 (Size ratio of prey mass over predator mass (g))", ylab = "planktivorous", main ="")
hist(log10(Ratio4), xlab = "log10 (Size ratio of prey mass over predator mass (g))", ylab = "predacious", main ="")
hist(log10(Ratio5), xlab = "log10 (Size ratio of prey mass over predator mass (g))", ylab = "predacious/piscivorous", main ="")
hist(Ratio1, xlab = "log10 (Size ratio of prey mass over predator mass (g))", ylab = "Insectivorous", main ="")
#Subplots of size ratio of prey mass over predator mass by feeding interaction type
pdf("../results/SizeRatio_Subplots.pdf", # Open blank pdf page using a relative path
11.7, 8.3)
par(mfrow=c(3,2))
hist(log10(Ratio1), xlab = "log10 (Size ratio of prey mass over predator mass (g))", ylab = "Insectivorous", main ="")
hist(log10(Ratio2), xlab = "log10 (Size ratio of prey mass over predator mass (g))", ylab = "piscivorous", main ="")
hist(log10(Ratio3), xlab = "log10 (Size ratio of prey mass over predator mass (g))", ylab = "planktivorous", main ="")
hist(log10(Ratio4), xlab = "log10 (Size ratio of prey mass over predator mass (g))", ylab = "predacious", main ="")
hist(log10(Ratio5), xlab = "log10 (Size ratio of prey mass over predator mass (g))", ylab = "predacious/piscivorous", main ="")
graphics.off();
mtext("Types of feeding interaction and Size ratios of prey mass over predator mass (g)",side = 3,line = - 2,outer = TRUE)
#Subplots of size ratio of prey mass over predator mass by feeding interaction type
pdf("../results/SizeRatio_Subplots.pdf", # Open blank pdf page using a relative path
11.7, 8.3)
par(mfrow=c(3,2))
hist(log10(Ratio1), xlab = "log10 (Size ratio of prey mass over predator mass (g))", ylab = "Insectivorous", main ="")
hist(log10(Ratio2), xlab = "log10 (Size ratio of prey mass over predator mass (g))", ylab = "piscivorous", main ="")
hist(log10(Ratio3), xlab = "log10 (Size ratio of prey mass over predator mass (g))", ylab = "planktivorous", main ="")
hist(log10(Ratio4), xlab = "log10 (Size ratio of prey mass over predator mass (g))", ylab = "predacious", main ="")
hist(log10(Ratio5), xlab = "log10 (Size ratio of prey mass over predator mass (g))", ylab = "predacious/piscivorous", main ="")
mtext("Types of feeding interaction and Size ratios of prey mass over predator mass (g)",side = 3,line = - 2,outer = TRUE)
graphics.off();
source("PP_Dists.R")
source("PP_Dists.R")
source("PP_Dists.R")
mean<-tapply(MyDF$Predator,MyDF$Type.of.feeding.interaction,mean)
mean
mean<-tapply(MyDF$Predator.mass,MyDF$Type.of.feeding.interaction,mean)
mean
Predatormean<-tapply(MyDF$Predator.mass,MyDF$Type.of.feeding.interaction,mean)
Preymean<-tapply(MyDF$Prey.mass,MyDF$Type.of.feeding.interaction,mean)
Predatormean<-tapply(MyDF$log10(Predator.mass),MyDF$Type.of.feeding.interaction,mean)
Predatormean<-tapply(log10(MyDF$Predator.mass),MyDF$Type.of.feeding.interaction,mean)
Preymean<-tapply(log10(MyDF$Prey.mass),MyDF$Type.of.feeding.interaction,mean)
Predatormean
Preymean
Predatormed<-tapply(log10(MyDF$Predator.mass),MyDF$Type.of.feeding.interaction,median)
Preymed<-tapply(log10(MyDF$Prey.mass),MyDF$Type.of.feeding.interaction,median)
Predatormed
Preymed
Ratio1 <- MyDF$Prey.mass[MyDF$Type.of.feeding.interaction=="insectivorous"] / MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="insectivorous"]
Ratio1 <- c(MyDF$Prey.mass[MyDF$Type.of.feeding.interaction=="insectivorous"] / MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="insectivorous"])
str(Ratio1)
str(Ratio2)
str(Predatormean)
calc<-data.frame(Predatormean,Preymean,Predatormed,Preymed)
calc
Predator.mean<-tapply(log10(MyDF$Predator.mass),MyDF$Type.of.feeding.interaction,mean)
Prey.mean<-tapply(log10(MyDF$Prey.mass),MyDF$Type.of.feeding.interaction,mean)
Predator.median<-tapply(log10(MyDF$Predator.mass),MyDF$Type.of.feeding.interaction,median)
Prey.median<-tapply(log10(MyDF$Prey.mass),MyDF$Type.of.feeding.interaction,median)
calc<-data.frame(Predatormean,Preymean,Predatormed,Preymed)
calc
calc<-data.frame(Predator.mean,Prey.mean,Predator.median,Preymedian)
calc<-data.frame(Predator.mean,Prey.mean,Predator.median,Prey.median)
calc
Predator.Prey.Size.Ratios<-c(Ratio1,Ratio2,Ratio3,Ratio4,Ratio5)
Predator.Prey.Size.Ratios
########### Calculations ########
Testing = MyDF$Prey.mass[MyDF$Type.of.feeding.interaction] / MyDF$Predator.mass[MyDF$Type.of.feeding.interaction]
########### Calculations ########
Testing<-data.frame(MyDF$Prey.mass[MyDF$Type.of.feeding.interaction] / MyDF$Predator.mass[MyDF$Type.of.feeding.interaction])
Testing
View(Testing)
print(Testing)
########### Calculations ########
Testing<-data.frame((MyDF$Prey.mass[MyDF$Type.of.feeding.interaction] / MyDF$Predator.mass[MyDF$Type.of.feeding.interaction]), MyDF$Type.of.feeding.interaction)
print(Testing)
########### Calculations ########
Ratio<-data.frame((MyDF$Prey.mass[MyDF$Type.of.feeding.interaction] / MyDF$Predator.mass[MyDF$Type.of.feeding.interaction]), MyDF$Type.of.feeding.interaction)
Predator.Prey.Size.Ratios.mean<-tapply(log10(Ratio),MyDF$Type.of.feeding.interaction,mean)
Prey.mean<-tapply(log10(MyDF$Prey.mass),mean)
Predator.Prey.Size.Ratios.mean<-tapply(log10(Ratio),MyDF$Type.of.feeding.interaction,mean)
MyDF$Type.of.feeding.interaction <- as.factor(MyDF$Type.of.feeding.interaction)
Predator.Prey.Size.Ratios.mean<-tapply(log10(Ratio),MyDF$Type.of.feeding.interaction,mean)
Predator.Prey.Size.Ratios.mean<-tapply(log10(Ratio),mean)
Predator.Prey.Size.Ratios.mean<-mean(log10(Ratio))
Predator.mean<-tapply(log10(MyDF$Predator.mass),MyDF$Type.of.feeding.interaction,mean)
colnames(Ratio)
dplyr::rename(X.MyDF.Prey.mass.MyDF.Type.of.feeding.interaction..MyDF.Predator.mass.MyDF.Type.of.feeding.interaction..=SizeRatio)
colnames(Ratio)
names(Ratio)[names(Ratio) == "X.MyDF.Prey.mass.MyDF.Type.of.feeding.interaction..MyDF.Predator.mass.MyDF.Type.of.feeding.interaction.."] <- "Size.Ratio"
Ratio
Predator.Prey.Size.Ratios.mean<-tapply(log10(Ratio$Size.Ratio),MyDF$Type.of.feeding.interaction,mean)
Predator.Prey.Size.Ratios.median<-tapply(log10(Ratio$Size.Ratio),MyDF$Type.of.feeding.interaction,median)
calc<-data.frame(Predator.mean,Prey.mean,Predator.Prey.Size.Ratios.mean, Predator.median,Prey.median,Predator.Prey.Size.Ratios.median)
calc
names(calc)[1]<-"Feeding Types"
calc
########### Calculations ########
Ratio<-data.frame((MyDF$Prey.mass[MyDF$Type.of.feeding.interaction] / MyDF$Predator.mass[MyDF$Type.of.feeding.interaction]), MyDF$Type.of.feeding.interaction)
colnames(Ratio)
names(Ratio)[names(Ratio) == "X.MyDF.Prey.mass.MyDF.Type.of.feeding.interaction..MyDF.Predator.mass.MyDF.Type.of.feeding.interaction.."] <- "Size.Ratio"
Predator.mean<-tapply(log10(MyDF$Predator.mass),MyDF$Type.of.feeding.interaction,mean)
Prey.mean<-tapply(log10(MyDF$Prey.mass),MyDF$Type.of.feeding.interaction,mean)
Predator.Prey.Size.Ratios.mean<-tapply(log10(Ratio$Size.Ratio),MyDF$Type.of.feeding.interaction,mean)
Predator.median<-tapply(log10(MyDF$Predator.mass),MyDF$Type.of.feeding.interaction,median)
Prey.median<-tapply(log10(MyDF$Prey.mass),MyDF$Type.of.feeding.interaction,median)
Predator.Prey.Size.Ratios.median<-tapply(log10(Ratio$Size.Ratio),MyDF$Type.of.feeding.interaction,median)
calc<-data.frame(Predator.mean,Prey.mean,Predator.Prey.Size.Ratios.mean, Predator.median,Prey.median,Predator.Prey.Size.Ratios.median)
calc
names(calc)[0]<-"Feeding Types"
calc
calc
write.csv(calc,"../results/PP_Results.csv")
names(calc)[0]<-"Feeding Types"
calc
names(calc)[1]<-"Feeding Types"
calc
require("tidyverse")
tibble::rownames_to_column(calc,var="Feeding.Types") %>% head
########### Calculations ########
Ratio<-data.frame((MyDF$Prey.mass[MyDF$Type.of.feeding.interaction] / MyDF$Predator.mass[MyDF$Type.of.feeding.interaction]), MyDF$Type.of.feeding.interaction)
colnames(Ratio)
names(Ratio)[names(Ratio) == "X.MyDF.Prey.mass.MyDF.Type.of.feeding.interaction..MyDF.Predator.mass.MyDF.Type.of.feeding.interaction.."] <- "Size.Ratio"
Predator.mean<-tapply(log10(MyDF$Predator.mass),MyDF$Type.of.feeding.interaction,mean)
Prey.mean<-tapply(log10(MyDF$Prey.mass),MyDF$Type.of.feeding.interaction,mean)
Predator.Prey.Size.Ratios.mean<-tapply(log10(Ratio$Size.Ratio),MyDF$Type.of.feeding.interaction,mean)
Predator.median<-tapply(log10(MyDF$Predator.mass),MyDF$Type.of.feeding.interaction,median)
Prey.median<-tapply(log10(MyDF$Prey.mass),MyDF$Type.of.feeding.interaction,median)
Predator.Prey.Size.Ratios.median<-tapply(log10(Ratio$Size.Ratio),MyDF$Type.of.feeding.interaction,median)
calc<-data.frame(Predator.mean,Prey.mean,Predator.Prey.Size.Ratios.mean, Predator.median,Prey.median,Predator.Prey.Size.Ratios.median)
calc
require("tidyverse")
tibble::rownames_to_column(calc,var="Feeding.Types") %>% head
write.csv(calc,"../results/PP_Results.csv")
Ratio<-data.frame((MyDF$Prey.mass[MyDF$Type.of.feeding.interaction] / MyDF$Predator.mass[MyDF$Type.of.feeding.interaction]), MyDF$Type.of.feeding.interaction)
colnames(Ratio)
names(Ratio)[names(Ratio) == "X.MyDF.Prey.mass.MyDF.Type.of.feeding.interaction..MyDF.Predator.mass.MyDF.Type.of.feeding.interaction.."] <- "Size.Ratio"
Predator.mean<-tapply(log10(MyDF$Predator.mass),MyDF$Type.of.feeding.interaction,mean)
Prey.mean<-tapply(log10(MyDF$Prey.mass),MyDF$Type.of.feeding.interaction,mean)
Predator.Prey.Size.Ratios.mean<-tapply(log10(Ratio$Size.Ratio),MyDF$Type.of.feeding.interaction,mean)
Predator.median<-tapply(log10(MyDF$Predator.mass),MyDF$Type.of.feeding.interaction,median)
Prey.median<-tapply(log10(MyDF$Prey.mass),MyDF$Type.of.feeding.interaction,median)
Predator.Prey.Size.Ratios.median<-tapply(log10(Ratio$Size.Ratio),MyDF$Type.of.feeding.interaction,median)
calc<-data.frame(Predator.mean,Prey.mean,Predator.Prey.Size.Ratios.mean, Predator.median,Prey.median,Predator.Prey.Size.Ratios.median)
calc
require("tidyverse")
tibble::rownames_to_column(calc,var="Feeding.Types") %>% head
write.csv(calc,"../results/PP_Results.csv")
calc<-tibble::rownames_to_column(calc,var="Feeding.Types") %>% head
calc
Ratio<-data.frame((MyDF$Prey.mass[MyDF$Type.of.feeding.interaction] / MyDF$Predator.mass[MyDF$Type.of.feeding.interaction]), MyDF$Type.of.feeding.interaction)
colnames(Ratio)
names(Ratio)[names(Ratio) == "X.MyDF.Prey.mass.MyDF.Type.of.feeding.interaction..MyDF.Predator.mass.MyDF.Type.of.feeding.interaction.."] <- "Size.Ratio"
Predator.mean<-tapply(log10(MyDF$Predator.mass),MyDF$Type.of.feeding.interaction,mean)
Prey.mean<-tapply(log10(MyDF$Prey.mass),MyDF$Type.of.feeding.interaction,mean)
Predator.Prey.Size.Ratios.mean<-tapply(log10(Ratio$Size.Ratio),MyDF$Type.of.feeding.interaction,mean)
Predator.median<-tapply(log10(MyDF$Predator.mass),MyDF$Type.of.feeding.interaction,median)
Prey.median<-tapply(log10(MyDF$Prey.mass),MyDF$Type.of.feeding.interaction,median)
Predator.Prey.Size.Ratios.median<-tapply(log10(Ratio$Size.Ratio),MyDF$Type.of.feeding.interaction,median)
calc<-data.frame(Predator.mean,Prey.mean,Predator.Prey.Size.Ratios.mean, Predator.median,Prey.median,Predator.Prey.Size.Ratios.median)
calc
require("tidyverse")
calc<-tibble::rownames_to_column(calc,var="Feeding.Types") %>% head
write.csv(calc,"../results/PP_Results.csv")
source("PP_Dists.R")
######### 3 Figures #########
#Subplots of Distribution of Predator Mass by Feeding Interation type
pdf("../results/Pred_Subplots.pdf",11.7, 8.3)  # Open blank pdf page using a relative path # These numbers are page dimensions in inches
par(mfrow=c(3,2)) #initialize multi-paneled plot # specify which sub-plot to use first
hist(log10(MyDF$Predator.mass[MyDF$Type.of.feeding.interaction=="insectivorous"]), xlab = "log10 (Predator Mass (g))", ylab = "Insectivorous", main ="")
source("PP_Dists.R")
qplot(log(Prey.mass), log(Predator.mass), data = MyDF, geom = c("point", "smooth"), colour=Type.of.feeding.interaction) + geom_smooth(method="lm")
qplot(Type.of.feeding.interaction, log(Prey.mass/Predator.mass), data=MyDF)
qplot(Type.of.feeding.interaction, log(Prey.mass/Predator.mass), data=MyDF, geom="jitter"#jitter the points around to see better
qplot(Type.of.feeding.interaction, log(Prey.mass/Predator.mass), data=MyDF, geom="jitter") #jitter the points around to see better
View(New)
qplot(Type.of.feeding.interaction, log(Prey.mass/Predator.mass), data=MyDF, geom = "jitter") #jitter the points around to see better
#boxplot
qplot(Type.of.feeding.interaction, log(Prey.mass/Predator.mass), data=MyDF, geom = "boxplot") #jitter the points around to see better
#Histogram and density plots
qplot(log(Prey.mass/Predator.mass),data=MyDF, geom="histogram")
qplot(log(Prey.mass/Predator.mass),data=MyDF, geom="histogram", fill = Type.of.feeding.interaction)
qplot(log(Prey.mass/Predator.mass),data=MyDF, geom="histogram", fill = Type.of.feeding.interaction, binwidth=1)
qplot(log(Prey.mass/Predator.mass),data=MyDF, geom="density", fill = Type.of.feeding.interaction, binwidth=1)
qplot(log(Prey.mass/Predator.mass),data=MyDF, geom="density", fill = Type.of.feeding.interaction, alpha=I(0.5))
qplot(log(Prey.mass/Predator.mass),data=MyDF, geom="density", colour = Type.of.feeding.interaction, alpha=I(0.5))
#Faceting plots
qplot(log(Pre.mass/Predator.mass), facets=Type.of.feeding.interaction~., data=MyDF, geom+"density")
#Faceting plots
qplot(log(Prey.mass/Predator.mass), facets=Type.of.feeding.interaction~., data=MyDF, geom+"density")
#Faceting plots
qplot(log(Prey.mass/Predator.mass), facets=Type.of.feeding.interaction~., data=MyDF, geom="density")
#Ploting and setting the axes to be logarithmic:
qplot(Prey.mass, Predator.mass, data = MyDF, log="xy")
#Plot annotations
qplot(Prey.mass, Predator.mass, data = MyDF, log="xy", main="Relation between predator and prey mass", xlab="log(Prey mass) (g)", ylab="log(Predator mass) (g)")
#Plot annotations
qplot(Prey.mass, Predator.mass, data = MyDF, log="xy", main="Relation between predator and prey mass", xlab="log(Prey mass) (g)", ylab="log(Predator mass) (g)" + theme_bw())
qplot(Predator.lifestage, data=MyDF, geom="bar")
p<-ggplot(MyDF,aes(x=log(Predator.mass),y=log(Prey.mass),colour=Type.of.feeding.interaction))
p
p + geom_point()
q<-p+ geom_point(size=I(2), shape=I(10)) +
theme_bw() + # make the background white
theme(aspect.ratio=1)
q
q + theme(legend.position="none")+theme(aspect.ratio=1)
p<-ggplot(MyDF, aes(x = log(Prey.mass/Predator.mass), fill = Type.of.feeding.interaction )) + geom_density()
p
p <- ggplot(MyDF, aes(x = log(Prey.mass/Predator.mass), fill = Type.of.feeding.interaction)) + geom_density(alpha=0.5)
p
#Multi panel plots
p <- ggplot(MyDF, aes(x = log(Prey.mass/Predator.mass), fill = Type.of.feeding.interaction )) +  geom_density() + facet_wrap( .~ Type.of.feeding.interaction)
p
#Multi panel plots
p <- ggplot(MyDF, aes(x = log(Prey.mass/Predator.mass), fill = Type.of.feeding.interaction )) +  geom_density() + facet_wrap( .~ Type.of.feeding.interaction, scale="free")
p <- ggplot(MyDF, aes(x = log(Prey.mass/Predator.mass))) +  geom_density() + facet_wrap( .~ Location, scales = "free")
p
p
p <- ggplot(MyDF, aes(x = log(Prey.mass), y = log(Predator.mass))) +  geom_point() + facet_wrap( .~ Location, scales = "free")
p
